// <auto-generated />
using System;
using CineTicket.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CineTicket.Migrations
{
    [DbContext(typeof(CineTicketDbContext))]
    [Migration("20251019094533_add_rap")]
    partial class add_rap
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ChiTietHoaDon", b =>
                {
                    b.Property<int>("MaCthd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaCTHD");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaCthd"));

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("MaBn")
                        .HasColumnType("int")
                        .HasColumnName("MaBN");

                    b.Property<int>("MaHd")
                        .HasColumnType("int")
                        .HasColumnName("MaHD");

                    b.Property<int?>("MaVe")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("MaCthd")
                        .HasName("PK__ChiTietH__1E4FA7715A64D0C4");

                    b.HasIndex("MaBn");

                    b.HasIndex("MaHd");

                    b.HasIndex("MaVe");

                    b.ToTable("ChiTietHoaDon", (string)null);
                });

            modelBuilder.Entity("CineTicket.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("CineTicket.Models.BapNuoc", b =>
                {
                    b.Property<int>("MaBn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaBN");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaBn"));

                    b.Property<decimal?>("Gia")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("MoTa")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TenBn")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("TenBN");

                    b.HasKey("MaBn")
                        .HasName("PK__BapNuoc__272475AD32F5D274");

                    b.ToTable("BapNuoc", (string)null);
                });

            modelBuilder.Entity("CineTicket.Models.ChiTietLoaiPhim", b =>
                {
                    b.Property<int>("MaPhim")
                        .HasColumnType("int");

                    b.Property<int>("MaLoaiPhim")
                        .HasColumnType("int");

                    b.HasKey("MaPhim", "MaLoaiPhim");

                    b.HasIndex("MaLoaiPhim");

                    b.ToTable("ChiTietLoaiPhim", (string)null);
                });

            modelBuilder.Entity("CineTicket.Models.Ghe", b =>
                {
                    b.Property<int>("MaGhe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaGhe"));

                    b.Property<string>("LoaiGhe")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("MaPhong")
                        .HasColumnType("int");

                    b.Property<string>("SoGhe")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TenPhong")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VeNavigationMaVe")
                        .HasColumnType("int");

                    b.HasKey("MaGhe")
                        .HasName("PK__Ghe__3CD3C67BFCA14E9D");

                    b.HasIndex("MaPhong");

                    b.HasIndex("VeNavigationMaVe");

                    b.ToTable("Ghe", (string)null);
                });

            modelBuilder.Entity("CineTicket.Models.HoaDon", b =>
                {
                    b.Property<int>("MaHd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaHD");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaHd"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ClientToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhThucThanhToan")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("MaSuat")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayLap")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("TongTien")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaHd")
                        .HasName("PK__HoaDon__2725A6E0DE25F710");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("HoaDon", (string)null);
                });

            modelBuilder.Entity("CineTicket.Models.LoaiPhim", b =>
                {
                    b.Property<int>("MaLoaiPhim")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLoaiPhim"));

                    b.Property<string>("TenLoaiPhim")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaLoaiPhim")
                        .HasName("PK__LoaiPhim__9CA05BEFEB048A14");

                    b.ToTable("LoaiPhim", (string)null);
                });

            modelBuilder.Entity("CineTicket.Models.Phim", b =>
                {
                    b.Property<int>("MaPhim")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPhim"));

                    b.Property<string>("Banner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DaoDien")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DienVien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsHot")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KhoiChieu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaLoaiPhim")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NgonNgu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Poster")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TenPhim")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ThoiLuong")
                        .HasColumnType("int");

                    b.Property<string>("Trailer")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaPhim")
                        .HasName("PK__Phim__4AC03DE3772452C4");

                    b.ToTable("Phim", (string)null);
                });

            modelBuilder.Entity("CineTicket.Models.PhongChieu", b =>
                {
                    b.Property<int>("MaPhong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPhong"));

                    b.Property<int?>("SoGhe")
                        .HasColumnType("int");

                    b.Property<string>("TenPhong")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaPhong")
                        .HasName("PK__PhongChi__20BD5E5BD2124FD6");

                    b.ToTable("PhongChieu", (string)null);
                });

            modelBuilder.Entity("CineTicket.Models.SuatChieu", b =>
                {
                    b.Property<int>("MaSuat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaSuat"));

                    b.Property<string>("GioChieu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaPhim")
                        .HasColumnType("int");

                    b.Property<int?>("MaPhong")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("NgayChieu")
                        .HasColumnType("date");

                    b.Property<DateTime?>("ThoiGianBatDau")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ThoiGianKetThuc")
                        .HasColumnType("datetime");

                    b.HasKey("MaSuat")
                        .HasName("PK__SuatChie__A69D0241FFB40570");

                    b.HasIndex("MaPhim");

                    b.HasIndex("MaPhong");

                    b.ToTable("SuatChieu", (string)null);
                });

            modelBuilder.Entity("CineTicket.Models.Ve", b =>
                {
                    b.Property<int>("MaVe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaVe"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("GiaVe")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("MaGhe")
                        .HasColumnType("int");

                    b.Property<int?>("MaSuat")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayDat")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiGiuId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ThoiGianTamGiu")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrangThai")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("MaVe")
                        .HasName("PK__Ve__2725100F335089D2");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("MaGhe");

                    b.HasIndex("MaSuat");

                    b.ToTable("Ve", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ChiTietHoaDon", b =>
                {
                    b.HasOne("CineTicket.Models.BapNuoc", "MaBnNavigation")
                        .WithMany("ChiTietHoaDons")
                        .HasForeignKey("MaBn")
                        .HasConstraintName("FK__ChiTietHoa__MaBN__4E88ABD4");

                    b.HasOne("CineTicket.Models.HoaDon", "MaHdNavigation")
                        .WithMany("ChiTietHoaDons")
                        .HasForeignKey("MaHd")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ChiTietHoa__MaHD__4CA06362");

                    b.HasOne("CineTicket.Models.Ve", "MaVeNavigation")
                        .WithMany("ChiTietHoaDons")
                        .HasForeignKey("MaVe")
                        .HasConstraintName("FK__ChiTietHoa__MaVe__4D94879B");

                    b.Navigation("MaBnNavigation");

                    b.Navigation("MaHdNavigation");

                    b.Navigation("MaVeNavigation");
                });

            modelBuilder.Entity("CineTicket.Models.ChiTietLoaiPhim", b =>
                {
                    b.HasOne("CineTicket.Models.LoaiPhim", "LoaiPhim")
                        .WithMany("ChiTietLoaiPhims")
                        .HasForeignKey("MaLoaiPhim")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CineTicket.Models.Phim", "Phim")
                        .WithMany("ChiTietLoaiPhims")
                        .HasForeignKey("MaPhim")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiPhim");

                    b.Navigation("Phim");
                });

            modelBuilder.Entity("CineTicket.Models.Ghe", b =>
                {
                    b.HasOne("CineTicket.Models.PhongChieu", "MaPhongNavigation")
                        .WithMany("Ghes")
                        .HasForeignKey("MaPhong")
                        .HasConstraintName("FK__Ghe__MaPhong__4222D4EF");

                    b.HasOne("CineTicket.Models.Ve", "VeNavigation")
                        .WithMany()
                        .HasForeignKey("VeNavigationMaVe");

                    b.Navigation("MaPhongNavigation");

                    b.Navigation("VeNavigation");
                });

            modelBuilder.Entity("CineTicket.Models.HoaDon", b =>
                {
                    b.HasOne("CineTicket.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("HoaDons")
                        .HasForeignKey("ApplicationUserId");

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("CineTicket.Models.SuatChieu", b =>
                {
                    b.HasOne("CineTicket.Models.Phim", "MaPhimNavigation")
                        .WithMany("SuatChieus")
                        .HasForeignKey("MaPhim")
                        .HasConstraintName("FK__SuatChieu__MaPhi__3E52440B");

                    b.HasOne("CineTicket.Models.PhongChieu", "MaPhongNavigation")
                        .WithMany("SuatChieus")
                        .HasForeignKey("MaPhong")
                        .HasConstraintName("FK__SuatChieu__MaPho__3F466844");

                    b.Navigation("MaPhimNavigation");

                    b.Navigation("MaPhongNavigation");
                });

            modelBuilder.Entity("CineTicket.Models.Ve", b =>
                {
                    b.HasOne("CineTicket.Models.ApplicationUser", null)
                        .WithMany("Ves")
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("CineTicket.Models.Ghe", "MaGheNavigation")
                        .WithMany("Ves")
                        .HasForeignKey("MaGhe")
                        .HasConstraintName("FK__Ve__MaGhe__44FF419A");

                    b.HasOne("CineTicket.Models.SuatChieu", "MaSuatNavigation")
                        .WithMany("Ves")
                        .HasForeignKey("MaSuat")
                        .HasConstraintName("FK__Ve__MaSuat__45F365D3");

                    b.Navigation("MaGheNavigation");

                    b.Navigation("MaSuatNavigation");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("CineTicket.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("CineTicket.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CineTicket.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("CineTicket.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CineTicket.Models.ApplicationUser", b =>
                {
                    b.Navigation("HoaDons");

                    b.Navigation("Ves");
                });

            modelBuilder.Entity("CineTicket.Models.BapNuoc", b =>
                {
                    b.Navigation("ChiTietHoaDons");
                });

            modelBuilder.Entity("CineTicket.Models.Ghe", b =>
                {
                    b.Navigation("Ves");
                });

            modelBuilder.Entity("CineTicket.Models.HoaDon", b =>
                {
                    b.Navigation("ChiTietHoaDons");
                });

            modelBuilder.Entity("CineTicket.Models.LoaiPhim", b =>
                {
                    b.Navigation("ChiTietLoaiPhims");
                });

            modelBuilder.Entity("CineTicket.Models.Phim", b =>
                {
                    b.Navigation("ChiTietLoaiPhims");

                    b.Navigation("SuatChieus");
                });

            modelBuilder.Entity("CineTicket.Models.PhongChieu", b =>
                {
                    b.Navigation("Ghes");

                    b.Navigation("SuatChieus");
                });

            modelBuilder.Entity("CineTicket.Models.SuatChieu", b =>
                {
                    b.Navigation("Ves");
                });

            modelBuilder.Entity("CineTicket.Models.Ve", b =>
                {
                    b.Navigation("ChiTietHoaDons");
                });
#pragma warning restore 612, 618
        }
    }
}
